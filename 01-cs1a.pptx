<html>
<head>
<title>CS I</title>
</head>
<body bgcolor=white>
<center>
<table>
<tr><td align=center rowspan=2><img src=book.jpg width=250>

</td>
<td align=center>

<h1>CS13011 Computer Science IA: Procedural Programming<br>
    CS13012 Computer Science IB: Object Oriented Programming<br>
<br>
Spring  2024</h1>
</td></tr>
<tr> <td align=center>

<table  cellpadding=1 cellspacing=2>
<tr><td>lecture instructor:</td><td> <b><a href=/~mikhail> Mikhail Nesterenko</a></b></tr>
<tr><td valign=top>office hours:</td><td><b>TR 1:15-3:15pm</b><br>
    Office: MSB 356<br>
  </td>
</tr>
<tr><td>phone:</td><td><b>(330) 672-9101</b></td></tr>
<tr><td>email:</td><td><b>mikhail AT cs.kent.edu</a></b></td></tr>
<tr><td><font color=white>.</font></td>
</tr>

<tr><td> lectures:</td>
  <td><b>TR 11:00am-12:15pm</b>, SMH 110 </td>
</tr>

<tr><td><font color=white>.</font></td>
</tr>
</tr>
<tr><td align=center colspan=2><b>lab instructors<td></tr>

<tr><td>Md. Kawsher Mahbub</td><td>mmahbub AT kent.edu</td></tr>
<tr><td>Xiangxu Lin</td><td>xlin10 AT kent.edu</td></tr>
<tr><td>Hao Zou</td><td>hzhou6 AT kent.edu</td></tr>
</tr>

</table>
<p>
  <table>
    <tr><th align=center colspan=4>CSIB lab times</th></tr>
<tr><th>section<br> number</th>
<th>day/time</th>
<th>location</th>
<th>instructor</th></tr>

<tr><td>001</td><td><b>M 9:55-11:50am</b></td><td>MSB 139</td><td>Kawsher</td></tr>
<tr><td>002</td><td><b>M 2:15-4:10pm</b></td><td>MSB 139</td><td>Xiangxu</td></tr>
<tr><td>005</td><td><b>W 2:15-4:10pm</b></td><td>MSB 162</td><td>Hao</td></tr> 
  </table>
<p>

</table>
</table>


</td></tr>
</table>
</center>
<p>
  
<b> Textbook:</b>
<i>Problem Solving With C++</i>
  by Walter J. Savitch, Pearson, 2017, Tenth Edition, ISBN:
  978-0134448282. The textbook is required. No access code is needed.
  Older editions may be allowed, check with me for details.
<a href=walterDiffs.txt>differences between course and textbook</a>
<p>
<a href=syllabus.doc>syllabus</a>, 
<a href=schedule.txt>tentative schedule</a>,
<a href=Labs>labs</a>


<p>
  <a href=exampleQuiz.pdf>example quiz</a>, <a href=exampleQuizKey.txt>answer key</a>

<!--
  <a href=oldExam1.txt>example CSIA final exam</a>
  <a href=oldExam1Answers.txt>example CSIA  exam answers</a>
  <a href=exam1topics.txt>CSIA exam review topics</a>
-->

<!--
<a href=oldExam2.txt>example CSIB exam</a>,

<a href=oldExam2Answers.txt>example CSIB exam answers</a>,
<a href=finalExamTopics.txt>CSIB final exam review topics, exam and consultation times</a> 
-->

<!--
<p>
<b>Mailing list:</b>
<a href=https://listmail.cs.kent.edu/mailman/listinfo/cs13001>list info/subscription</a>,
<a href=https://listmail.cs.kent.edu/pipermail/cs13001/2023/date.html>archive</a>,
<a href=https://listmail.cs.kent.edu/pipermail/cs13001/2022/date.html>previous year's archive</a>
<p>
-->
<br>
<center> <font size=+1><b>Slides and Examples</b></font></center>


<table>

<tr>
<td><b>topic</b></td>
<td><b>examples</b></td>
<td><b>book chapters</b></td>
<!--<td><b>recordings</b></td>-->
</tr>

<tr><td colspan=3><b>CSIA</b></td></tr>

<tr>
<td>
<a href=Slides/L01intro.ppt>introduction, history of C++, C++ program outline</a>
</td>
<td></td>
<td>1.1-1.3</td>
<td></td>
</tr>

<tr>
<td><a href=Slides/L02msvcpp.ppt>first program, development environment</a>
<td><a href=Examples/First/>hello world, area</a></td>
<td>1.3-1.4</td>
<td>
</td>
<tr>

<tr>
<td>
<a href=Slides/L03vars.ppt>variables, identifiers, assignment, input/output</a>
</td>
<td></td>
<td>2.1-2.2</td>
<td>
</td>
</tr>

<tr>
<td>
<a href=Slides/L04operations.ppt>types, expressions, more on assignment</a>
</td>
<td><a href=Examples/Operations/>digits</a></td>
<td>2.3</td>
<td>
</td>
</tr>

<tr>
<td><a href=Slides/L05if.ppt>boolean algebra, boolean and
        relational operators, branching constructs</a>
</td>
<td><a href=Examples/Ifswitch>order, toll, largest</a></td>
<td>2.4, 3.1-3.2</td>
</tr>

<tr>
<td><a href=Slides/L06while.ppt>iterative constructs: while, do-while, for</a>
</td>
<td><a href=Examples/While>increment, max, odometer, liftoff</a> 
<td>2.4, 3.3-3.4</td>
<td>
</td>
</tr>

<tr>
<td><a href=Labs/style.html>programming style, comments, naming programs</a>
    <br><a href=Slides/L07libfuncs.ppt>predefined functions (library functions)</a>
</td>
<td><a href=Examples/Funcs>doghouse, equation, time and random</a></td>
<td>2.5, 4.2</td>
<td>
</td>
</tr>

<tr>
<td><a href=Slides/L08userfuncs.ppt>programmer-defined functions,
    local and global variables, call-by-value</a></td>
<td><a href=Examples/Userfuncs/>add1, circle area</a></td>
<td>4.3,4.5</td>
<td>
</td>
</tr>

<!--
<tr>
<td><a href=Slides/L09topdown.ppt> design, design examples,
    debugging functions</a></td>
<td><a href=Examples/Userfuncs/Pizza>buying pizza</a></td>
<td>4.1, 4.4, 5.3, 5.4</td>
</tr>
-->

<tr>
<td><a href=Slides/L09multfiles.ppt>separate files, independent compilation,
    header files</a>
</td>
<td><a href=Examples/Separate.files>add1 in separate files</td>
<td>12.1</td>
<td>
</td>
</tr>

<tr>
<td><a href=Slides/L10voidfuncs.ppt>void-functions, predicates, call-by-reference</a>
<td><a href=Examples/Voidfuncs>stack example, swap'em, valueVSreference, predicated greeting</a></td>
<td>5.1, 5.2, 14.1</td>
<td>
</td>
</tr>


<tr>
<td><a href=Slides/L12arrays.ppt>defining arrays, arrays with for-loops,
    passing arrays as arguments</a>,
</td>
<td><a href=Examples/Arrays>initialize array, pass  as parameter</a>
</td>
<td>7.1-7.2</td>
<td>
<td>

</tr>

<tr>
<td><a href=Slides/L14strings.ppt>strings</a></td>
<td><a href=Examples/Strings/>finding in/updating/passing as parameters/etc.</a></td>
<td>8.1,8.2
</td>
<td>
</td>
</tr>


<tr>
<td><a href=Slides/L15io.ppt>file input/ouput</a></td>
<td><a href=Examples/Io>sum of three numbers, setw, cerr, to_string, stoi, reading lines from file<a></td>
<td>6.1</td>
<td>
</td>
</tr>

<tr>
<td><a href=Slides/L32namespaces.ppt>namespaces</a></td>
<td><a href=Examples/Namespaces>defining, std</a></td>
<td>12.2</td>
<td>
</td>
</tr>



<tr><td><font color=white>.</font></td></tr>
<tr><td colspan=4><b>CSIB</b></td></tr>





<tr>
<td><a href=Slides/L15structs.ppt>structures</a>
<td><a href=Examples/Structs/>simple, complex, passing as parameters, using with arrays</a></td>
<td>10.1</td>
<td>
</td>
</tr>


<tr>

<tr>
<td><a href=Slides/L16classes.ppt>classes</td>
<td><a href=Examples/Classes/>simple, constructors, inline functions,
    friend functions</a></td>
<td>10.2</td>
<td>
</td>
</tr>





<tr>
<td><a href=Slides/L19pointers.ppt>pointers</a></td>
<td><a href=Examples/Pointers>pointer usage</a></td>
<td>9.1</td>
<td>
</td>
</tr>


<tr>
<td><a href=Slides/L20dynamicmemory.ppt>dynamic memory allocation</a>
</td>
<td><a href=Examples/Dynamicmemory>dynamic memory</a>
</td>
<td>9.2</td>
<td>
</td>
</tr>

<tr>
<td><a href=Slides/L33DynamicObjects.ppt>objects with dynamically allocated members</a>
</td>
<td><a href=Examples/DynamicObjs>dynamic objects</a>
</td>
<td>11.4</td>
</td>
<td>
</td>
</tr>

<tr>
<td><a href=Slides/L26vectors.ppt>vectors</a></td>
<td><a href=Examples/Vectors>elementary operations, size change, 
        use with functions, iterators</a></td>
<td>8.3, 18.1</td>
<td>
</td>
</tr>



<tr>
<td><a href=Slides/L31MultArrays.ppt>multidimenstional arrays, vectors of vectors</a></td>
<td><a href=Examples/MultArrays>index counting, multiplication table, ragged array</a>
</td>
<td>7.4</td>
<td>
</tr>


<tr>
<td><a href=Slides/L23recursion.ppt>recursion</a></td>
<td><a href=Examples/Recursion>factorial, write vertical, sum, reverse</a></td>
<td>14.1</td>
<td>
</td>
</tr>

<tr>
<td><a href=Slides/L22diagrams.ppt>diagrams</a></td>
<td></td>
<td>
</td>

<tr>
<td><a href=Slides/L28exceptions.ppt>exception handling</a></td>
<td><a href=Examples/Exceptions/>exceptions</a></td>
<td>16.1,16.2</td>
<td></td>
</tr>



<tr><td><font color=white>.</font></td></tr>
<tr><td colspan=4><b>not covered</b></td></tr>

</tr>
<td></td>
<td></td>
<td></td>
<td>
</td>
</tr>


<table>


<!--
<tr>
<td><a href=Slides/L27templates.ppt>class and function templates<a></td>
<td><a href=Examples/Templates>basic</a>,
    <a href=Examples/Templates/Sorting-Template>insertion-sort</a>,
    <a href=Examples/Templates/List-Template>linked-list</a>
</td>
<td>17.1-17.2</td>
</tr>
-->

<!--
<tr>
<td>inheritance</td>
<td><a href=Examples/Inheritance>inheritance</a></td>
<td>15.1,15.2</td>
</tr>
-->

<!--
<tr>
<td></td>
<td>11/</td>
<td></td>
<td><i>Thanksgiving - no class<i></td>
</tr>


<tr>
<td>25.</td>
<td>11/22</td>
<td></td>
<td><a href=Slides/L25STL.ppt>Standard template library</a></td>
<td><a href=Examples/STL>stl examples</a></td>
<td>
18.1,18.2
<a href="/~ioop/students/Grades/DnDSTL.pdf">D&D ch.20</a>
</td>
</tr>
-->

<!--
<td><a href=Slides/L24documentation.ppt>automatic code documentation</a></td>

<td>    <a href=Labs/Lab9/html>battleship</a>,
     <a href=http://xerces.apache.org/xerces-c/apiDocs-3/classes.html>XML parser 
          documented with Doxygen</a>
  </td>
<td><a href=http://www.stack.nl/~dimitri/doxygen/>doxygen main page</a></td>
</tr>

-->

<!--
<tr>
<td><a href=Slides/L29bits.ppt>bitwise operations, bit fields</a></td>
<td><a href=Examples/Bits>bit manipulation</a></td>
<td><a href=http://classes.cs.kent.edu/courses/cs23021/svn/Download/bitsDnD.pdf>bit manipulation</a></td>
</tr>
-->
<!--
<tr>
<td><a href=Slides/L30parallel.ppt>parallel computations</a></td>
<td><a href=Examples/PPL>parallel patterns library</a></td>
<td><a href=http://en.wikipedia.org/wiki/Anonymous_function#C.2B.2B>anonymous functions</s>,
    <a href=http://msdn.microsoft.com/en-us/library/dd470426.aspx>MS parallel algrithms</a>,
    <a href=http://msdn.microsoft.com/en-us/library/dd293603.aspx>MS lambda expression syntax</a>
-->
</td>
</tr>
</table>
